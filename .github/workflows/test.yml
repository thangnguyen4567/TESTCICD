name: Node.js CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      security-events: write

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './package-lock.json'
      
      - name: Cache node modules
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json', '**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      
      - name: Lint code
        run: npm run lint || echo "Linting failed but continuing..."
      
      - name: Run tests with coverage
        run: npm test -- --coverage
      
      - name: Upload test coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/
      
      - name: Verify tests passed
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const conclusion = "${{ job.status }}";
            if (conclusion !== "success") {
              core.setFailed("Tests must pass before merging to main branch!");
            }
      
      - name: Run security audit
        run: npm audit --production
      
      - name: CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      
  deploy:
    needs: lint-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: './package-lock.json'
      
      - name: Cache node modules
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json', '**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
      
      - name: Send notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ci-cd
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: Build and Deploy
          SLACK_MESSAGE: 'Application has been deployed :rocket:'
          
      - name: Send email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: üöÄ Commit Code Th√†nh C√¥ng - ${{ github.repository }}
          to: thang.nguyen@vnresource.org
          from: GitHub Actions <${{ secrets.MAIL_USERNAME }}>
          body: |
            Commit code ƒë√£ ƒë∆∞·ª£c tri·ªÉn khai th√†nh c√¥ng!
            
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            Commit message: ${{ github.event.head_commit.message }}
            
            Ng∆∞·ªùi commit: ${{ github.actor }}
            Th·ªùi gian: ${{ github.event.head_commit.timestamp }}
            
            Link t·ªõi commit: https://github.com/${{ github.repository }}/commit/${{ github.sha }}
          content_type: text/plain